Topics:

SELECT DISTINCT Statement
SubQuery
AND Operators
OR Operators
LIKE Operator (with % and _ )
IN Operator
BETWEEN Operator
ALL Operator
ANY Operator
EXISTS
NOT
Equal to (=)
Greater than (>)
Less than (<)
Greater than or equal to (>=)
Less than or equal to (<=)
Not Equal to (<>)
Addition (+)
Subtraction (-)
Multiplication (*)
Division (/)
Modulus (%)
IS NULL

Clauses:
WHERE
ORDER BY
TOP

Task Assignment :
1. Practice all SQL operators and clauses in tables created by you.(Make query of each)
2. Create all tables given in "Database design" text file and perform given question in "Task Question" text file


Create a file that contains all the queries which you have executed and are properly working.
That file will be uploaded for submission.

Note: DO NOT COPY PASTE from others.
-------------
SQL Operators
Clauses
WHERE
GROUP BY
HAVING
ORDER BY
Top

SQL Operators
SELECT DISTINCT Statement
AND Operators
OR Operators
ORDER BY Keyword
SELECT TOP Clause
LIKE Operator (with % and _ )
IN Operator
BETWEEN Operator
ALL Operator
ANY Operator
EXISTS
NOT
Equal to (=) 
Greater than (>) 
Less than (<) 
Greater than or equal to (>=) 
Less than or equal to (<=) 
Not Equal to (<>)
Addition (+)
Subtraction (-)
Multiplication (*)
Division (/)
Modulus (%)
IS NULL	
https://www.w3schools.com/sql/sql_operators.asp
---------
Db design:
1) Employee
	id
	firstName
	middleName
	lastName
	birthDate
	gender
	address
	dateOfJoin
	departmentId
	designationId

2) Department
	id
	departmentName

3) Designation
	id
	DesignationName

4) Salary
	id
	annualIncome - DECIMAL(18,2)
	loans - DECIMAL(18,2)
	insurence - DECIMAL(18,2)
	monthlyIncome - DECIMAL(18,2)
	onHandIncome - DECIMAL(18,2)
	employeeId

5) Project
	id
	projectName
	ClientName
	startDate
	endDate
	status

6) ProjectTeam
	id
	employeeId
	projectId
	startDate
	endDate
	status
-----------
ANS
--DATABASE PARACTICE
CREATE DATABASE PRACTICE

--1)DEPARTMENT
CREATE TABLE Department(
DeptId	int IDENTITY(1,1) PRIMARY KEY,
Name VARCHAR(100) NOT NULL,
Address	VARCHAR(250) NOT NULL
);

SELECT * FROM Department;

INSERT INTO Department VALUES(
'IT','ahmedabad'),
('Electrical','surat'),
('Mechanical','rajkot');

--(DISTINCT)
SELECT DISTINCT Name FROM Department;


--(LIKE PATTERN)
SELECT * FROM Department WHERE Name='electrical';
SELECT * FROM Department WHERE Name like '%cal';
SELECT * FROM Department WHERE Name like '%l';
SELECT * FROM Department WHERE Address like 's%t';
SELECT * FROM Department WHERE Name like 'r%t';

--(IN AND NOT IN)
SELECT * from Department WHERE Address IN ('ahmedabad'); 
SELECT * from Department WHERE Address NOT IN ('ahmedabad');


--2)STUDENT
CREATE TABLE Student(
Id INT IDENTITY(1,1) PRIMARY KEY,
Rollno VARCHAR(10) NOT NULL,
Name VARCHAR(50) NOT NULL,
Enrollno VARCHAR(50) UNIQUE NOT NULL,
Address VARCHAR(200) NOT NULL,
DeptId INT FOREIGN KEY REFERENCES Department(DeptId)
);

SELECT * FROM Student;

INSERT INTO Student VALUES(
'5126','sandip','abc','ahmedabad',1),
('5127','ayushi','def','surat',1),
('5129','khushi','ghi','mumbai',2),
('5131','bhavika','jkl','surendranagar',2),
('5055','hitesh','mno','rajkot',3),
('5011','bhargav','pqr','dahegam',3);

SELECT * FROM Student;

--(ANY)
SELECT Name
FROM Department
WHERE DeptId = ANY (SELECT DeptID FROM Student WHERE Name = 'sandip');

SELECT *
FROM Department
WHERE DeptId = ANY (SELECT DeptID FROM Student WHERE Name = 'hitesh');

--(ALL)
SELECT Name
FROM Department
WHERE DeptId = ALL (SELECT DeptID FROM Student WHERE Name = 'sandip');

SELECT *
FROM Department
WHERE DeptId = ALL (SELECT DeptID FROM Student WHERE Name = 'bhargav');


--(EXITS)
SELECT Name
FROM Student
WHERE EXISTS (SELECT Name FROM Department WHERE Department.DeptId = Student.DeptId);

SELECT Name
FROM Department
WHERE EXISTS (SELECT Name FROM Student WHERE Department.DeptId = Student.DeptId);


--(DISTINCT)
SELECT DISTINCT Name FROM Student;
SELECT DISTINCT DeptId FROM Student;


--(AND)
SELECT * FROM Student
WHERE Rollno=5055 AND Address='rajkot';

SELECT * FROM Student
WHERE DeptId=1 AND DeptId=3;

--(OR)
SELECT * FROM Student
WHERE Address='ahmedabad' OR Address='rajkot';

SELECT * FROM Student
WHERE DeptId=1 OR DeptId=3;

--(NOT)
SELECT * FROM Student
WHERE NOT Address='ahmedabad';

SELECT * FROM Student
WHERE NOT DeptId=2;

--(IN AND NOT IN) INCLUDING WHERE
SELECT * from Student WHERE DeptId IN (1); 
SELECT * from Student WHERE DeptId NOT IN (2); 


--(BETWEEN)
SELECT * FROM Student
WHERE DeptId BETWEEN 1 AND 2;

--(TOP)
SELECT TOP 4 id,Rollno,Name FROM Student;

--(>,<,>=,<=,=)
SELECT * FROM Student WHERE Id > 2;--greater than
SELECT * FROM Student WHERE Id < 2;--less than
SELECT * FROM Student WHERE Id >= 2;--greater than equal to
SELECT * FROM Student WHERE Id <= 2;--less than equal to
SELECT * FROM Student WHERE Id = 2;--equal to
SELECT * FROM Student WHERE Id <> 2;--not equal to

--3)Customers_1
CREATE TABLE Customers_1(
CustomerId INT PRIMARY KEY,
CustomerName VARCHAR(100),
ContactName VARCHAR(100),
Address	VARCHAR(200),
City VARCHAR(100),
Pincode INT,
Country Varchar(50)
);

SELECT * FROM Customers_1;

INSERT INTO Customers_1 VALUES
(1,'sandip','trainee','213 prahlad park','ahmedabad',382418,'india'),
(2,'ishan','designer','g1 chinchpokhli','jurassic world',009900,'japan'),
(37,'dhara','developer','c1 chipotara','aliyabada',995511,'china'),
(5,'rahul','developer','new ranip','ahemdabad',552233,'india'),
(16,'asmita','designer','441 almora','new york',234567,'usa'),
(43,'kalpana','trainee','2 ramol park','ahmedabad','','india');


SELECT * FROM Customers_1;
DROP TABLE Customers_1;


--(ORDER BY)
SELECT * FROM Customers_1
ORDER BY Country;

SELECT * FROM Customers_1
ORDER BY Country DESC;

--(TOP)
SELECT TOP 3 * FROM Customers_1;

--(NULL)
SELECT * FROM Customers_1 WHERE Pincode='';

--4)EMPLOYEES
CREATE TABLE Employees(
EmpId INT PRIMARY KEY,
FirstName VARCHAR(100),
LastName VARCHAR(100),
DatOfBirth DATE,
Salary int);

SELECT * FROM Employees;

INSERT INTO Employees VALUES(
1,'davolio','nancy','1968-12-08',5000),
(2,'fuller','andrew','1952-02-19',10000),
(3,'levering','janet','1963-08-20',15000),
(4,'dyna','pento','1963-04-20',12000),
(5,'bob','marley','1963-07-20',18000);

SELECT * FROM Employees;

--(-,+,*,/,%)Arithmatic oprators
SELECT EmpId,FirstName,LastName,Salary,Salary + 100--addition
   AS "Salary + 100" FROM Employees;

   SELECT EmpId,FirstName,LastName,Salary,Salary - 1000--subtraction
   AS "Salary - 1000" FROM Employees;

   SELECT EmpId,FirstName,LastName,Salary,Salary / 100--division
   AS "Salary / 100" FROM Employees;

   SELECT EmpId,FirstName,LastName,Salary,Salary * 10--multiplication
   AS "Salary * 10" FROM Employees;

    SELECT EmpId,FirstName,LastName,Salary,Salary % 10--modulo
   AS "Salary % 10" FROM Employees;
GO
--------------------
--DATABASE SQL_TASK3
CREATE DATABASE sql_task3

--1)DEPARTMENT
CREATE TABLE Department(
DepartmentId INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
DepartmentName VARCHAR(100) NOT NULL
);

SELECT * FROM Department;

INSERT INTO Department VALUES
('PHP'),
('ANDROID'),
('.NET'),
('JAVA'),
('IOS'),
('angular'),
('Reactjs');

SELECT * FROM Department;
--Drop table Department;

--2)DESIGNATION
CREATE TABLE Designation(
DesignationId INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
DesignationName VARCHAR(100) NOT NULL
);

SELECT * FROM Designation;


INSERT INTO Designation VALUES
('CEO'),
('Project Manager'),
('HR'),
('Employee'),
('Trainee'),
('Android developer'),
('developer');

SELECT * FROM Designation;
--Drop table Designation;

--3)EMPLOYEE
CREATE TABLE Employee
(
EmployeeId INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
FirstName VARCHAR(100) NOT NULL,
MiddleName VARCHAR(100) NOT NULL,
LastName VARCHAR(100) NOT NULL,
BirthDate DATE,
Gender TINYINT, --1 FOR MALE AND 2 FOR FEMALE
Address VARCHAR(300) NOT NULL,
DateOfJoin DATETIME,
DepartmentId INT FOREIGN KEY REFERENCES Department(DepartmentId),
DesignationId INT FOREIGN KEY REFERENCES Designation(DesignationId)
);

SELECT * FROM Employee;

INSERT INTO Employee VALUES
('sandip','sanjaybhai','parmar','1998-06-16',1,'ahmedabad','2020-01-01',1,1),
('kabir','bhaumitbhai','panchal','1995-09-23',1,'surat','2015-05-10',2,2),
('kalpna','parbhubhai','pitroda','1971-04-02',2,'rajkot','2000-01-15',3,3),
('tilak','kamleshbhai','dave','2000-09-11',1,'kalol','2020-01-01',4,4),
('janvi','ketanbhai','padhriya','1999-08-24',2,'jamnagar','2020-01-01',5,5),
('kinjal','devendrabhai','pitroda','1997-05-05',2,'rajkot','2020-01-10',6,6),
('rajan','parekhbhai','patel','1989-05-10',1,'new york','2020-01-10',7,7);

SELECT * FROM Employee;
--Drop table Employee;


--4)SALARY
CREATE TABLE Salary
(
SalaryId INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
AnnualIncome DECIMAL(18,2),
Loans DECIMAL(18,2),
Insurance DECIMAL(18,2),
MonthlyIncome DECIMAL(18,2),
OnHandIncome DECIMAL(18,2),
EmployeeId INT FOREIGN KEY REFERENCES Employee(EmployeeId)
);

SELECT * FROM Salary;

INSERT INTO Salary VALUES
(500000,300000,50000,41666.6667,36000,1),
(450000,350000,45000,37500,32000,2),
(400000,400000,null,33333.3333,28000,3),
(350000,450000,35000,29166.6667,24000,4),
(400000,400000,null,33333.3333,28000,5),
(400000,400000,null,33333.3333,28000,6),
(350000,450000,35000,29166.6667,24000,7);

SELECT * FROM Salary;
--drop table Salary;

--5)PROJECT
CREATE TABLE Project
(
ProjectId INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
ProjectName VARCHAR(100) NOT NULL,
ClientName VARCHAR(100) NOT NULL,
StartDate DATETIME,
EndDate DATETIME2,
Status TINYINT --1 FOR COMPLETED AND 2 FOR INPROGRESS 3 FOR PRNDING
);

SELECT * FROM Project;

INSERT INTO Project VALUES
('EMPLOYEE MANAGEMENT SYSTEM','ishan chavda','2018-01-10','2019-06-10',1),
('CATERING SYSTEM','dhara chavda','2019-05-20','2020-10-10',1),
('ATTENDANCE SYSTEM','himanshu pranami','2018-10-22','2020-10-20',2),
('EXHIBITION MANAGEMENT SYSTEM','hardik sanghvi','2017-05-06','2019-05-03',3),
('LEARNING MANAGEMNT SYSTEM','mayur fefar','2019-01-01','2020-01-01',2),
('HOTEL MANAGEMENT SYSTEM','sanjay parmar','2017-10-05','2019-05-20',2),
('ONLINE SHOPPING SYSTEM','kalpana panchal','2019-01-10','2020-01-10',1);

SELECT * FROM Project;
--drop table Project;

--6)PROJECT-TEAM
CREATE TABLE ProjectTeam
(
ProjectTeamId INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
EmployeeId INT FOREIGN KEY REFERENCES Employee(EmployeeId),
ProjectId INT FOREIGN KEY REFERENCES Project(ProjectId),
StartDate DATETIME2,
EndDate DATETIME,
Status TINYINT --1 FOR COMPLETED AND 2 FOR INPROGRESS 3 FOR PRNDING
);

SELECT * FROM ProjectTeam;

INSERT INTO ProjectTeam VALUES
(1,1,'2018-01-10','2019-06-10',1),
(2,2,'2019-05-20','2020-10-10',1),
(3,3,'2018-10-22','2020-10-20',2),
(4,4,'2017-05-06','2019-05-03',3),
(5,5,'2019-01-01','2020-01-01',2),
(6,6,'2017-10-05','2019-05-20',2),
(7,7,'2019-01-10','2020-01-10',1);

SELECT * FROM ProjectTeam;
--drop table ProjectTeam;

--Data Extraction from above table using diffrent queries:

--1. write down sql query to print unique employee firstName 
SELECT DISTINCT * FROM Employee;

--2. write down sql query to print employee whose annual income is higest 
SELECT * FROM Employee
WHERE EmployeeId IN(SELECT TOP 1 EmployeeId FROM Salary ORDER BY AnnualIncome DESC);


--3. write down sql query to Print details of the employee who have joined in 2018 
SELECT * FROM Employee WHERE year(DateOfJoin) LIKE '2018';

--in the table 2018 year is not peresent so that nothing is to be print so, i write below query for the output;
SELECT * FROM Employee WHERE year(DateOfJoin) LIKE '2020';
				--another way
SELECT * FROM Employee WHERE year(DateOfJoin) = '2020';

--4. write down sql query to fetch the count of employee whose working in .net department  
SELECT COUNT(*) AS NumberOfEmployees
FROM Employee
WHERE DepartmentId IN(SELECT DepartmentId FROM Department WHERE DepartmentName='.NET');


--5. write down sql query to fetch employee whose monthly income is greather than 30000 and less than 50000  
SELECT * FROM Employee 
WHERE EmployeeId IN (SELECT EmployeeId FROM Salary WHERE MonthlyIncome > 30000 AND MonthlyIncome < 50000 );

SELECT * FROM Employee 
WHERE EmployeeId IN (SELECT EmployeeId FROM Salary WHERE MonthlyIncome between 30000 AND 50000 );


--6. write down sql query to show only even rows from a table.
SELECT * FROM Department WHERE (DepartmentId % 2) = 0 ;
SELECT * FROM Designation WHERE (DesignationId % 2) = 0 ;
SELECT * FROM Employee WHERE (EmployeeId % 2) = 0 ;
SELECT * FROM Salary WHERE (SalaryId % 2) = 0 ;
SELECT * FROM Project WHERE (ProjectId % 2) = 0 ;
SELECT * FROM ProjectTeam WHERE (ProjectTeamId % 2) = 0 ;

--7. write down sql query to print 3 employee whose onHandIncome is lowest 
SELECT * FROM Employee 
WHERE EmployeeId In(SELECT TOP 3 EmployeeId from Salary order by OnHandIncome);


--8. write down sql query to find the project name whose client name is 'xyz' 
SELECT ProjectName FROM Project WHERE ClientName='xyz';

--in the table xyz client name is not peresent so that nothing is to be print so, i write below query for the output
--query like (xyz instead of ishan chavda)
SELECT ProjectName FROM Project WHERE ClientName='ishan chavda';
SELECT ProjectName FROM Project WHERE ClientName='sanjay parmar';


--9. write down sql query to print list of employee who is not working in 'xyz' project 
SELECT * FROM Employee 
WHERE EmployeeId In 
(SELECT EmployeeId FROM ProjectTeam WHERE ProjectId IN 
(SELECT ProjectId FROM Project WHERE NOT ProjectName='xyz'));


--10. write down sql query to find employee who are associated with client whose name start with 'a' 
SELECT * FROM Employee 
WHERE EmployeeId In 
(SELECT EmployeeId FROM ProjectTeam WHERE ProjectId IN 
(SELECT ProjectId FROM Project WHERE ClientName LIKE 'a%'));

--there is nothing print here because no single client whose name start with the 'a'
--the query like(i instead of a)

SELECT * FROM Employee 
WHERE EmployeeId In 
(SELECT EmployeeId FROM ProjectTeam WHERE ProjectId IN 
(SELECT ProjectId FROM Project WHERE ClientName LIKE 'i%'));--client name ishan chavda

SELECT * FROM Employee 
WHERE EmployeeId In 
(SELECT EmployeeId FROM ProjectTeam WHERE ProjectId IN 
(SELECT ProjectId FROM Project WHERE ClientName LIKE 'd%'));--client name dhara chavda


--11. write down sql query to find employee who are associated with client whose name end with 'a' 
SELECT * FROM Employee 
WHERE EmployeeId In 
(SELECT EmployeeId FROM ProjectTeam WHERE ProjectId IN 
(SELECT ProjectId FROM Project WHERE ClientName LIKE '%a'));


--12. write down sql query to find employee who are associated with client whose contain name with 'a' 
SELECT * FROM Employee 
WHERE EmployeeId In 
(SELECT EmployeeId FROM ProjectTeam WHERE ProjectId IN 
(SELECT ProjectId FROM Project WHERE ClientName LIKE '%a%'));
        

--13. write down sql query to find employee whose working in .net and reactJS project 
SELECT * FROM Employee 
WHERE EmployeeId In(SELECT EmployeeId FROM Department WHERE DepartmentName='.NET' AND DepartmentName='Reactjs');

--no single employee are working together in .net and reactjs both so, nothing is tobe print here.


--14. write down sql query to print firstname and lastname in single column
SELECT FirstName + ' ' + LastName as 'full_name' FROM Employee;


--15. write down sql query to List out all employee who are android developer or project manager 
SELECT * FROM Employee 
WHERE DesignationId In(SELECT DesignationId FROM Designation WHERE DesignationName='project manager' OR DesignationName='android developer');


--16. write down sql query to list out all employee who have no any insurence 
SELECT * FROM Employee 
WHERE EmployeeId IN(SELECT EmployeeId FROM Salary WHERE Insurance IS NULL);

